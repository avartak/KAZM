// include/Scanner.h generated by reflex 2.1.5 from src/lexer.l

#ifndef REFLEX_INCLUDE_SCANNER_H
#define REFLEX_INCLUDE_SCANNER_H
#define IN_HEADER 1
#define REFLEX_VERSION "2.1.5"

////////////////////////////////////////////////////////////////////////////////
//                                                                            //
//  OPTIONS USED                                                              //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////

#define REFLEX_OPTION_header_file         "include/Scanner.h"
#define REFLEX_OPTION_lex                 scan
#define REFLEX_OPTION_lexer               Scanner
#define REFLEX_OPTION_namespace           kazm
#define REFLEX_OPTION_noline              true
#define REFLEX_OPTION_outfile             "src/Scanner.cc"
#define REFLEX_OPTION_token_type          kazm::Token

////////////////////////////////////////////////////////////////////////////////
//                                                                            //
//  SECTION 1: %top user code                                                 //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////


#include <Token.h>


////////////////////////////////////////////////////////////////////////////////
//                                                                            //
//  REGEX MATCHER                                                             //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////

#include <reflex/matcher.h>

////////////////////////////////////////////////////////////////////////////////
//                                                                            //
//  ABSTRACT LEXER CLASS                                                      //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////

#include <reflex/abslexer.h>

////////////////////////////////////////////////////////////////////////////////
//                                                                            //
//  LEXER CLASS                                                               //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////

namespace kazm {

class Scanner : public reflex::AbstractLexer<reflex::Matcher> {
 public:
  typedef reflex::AbstractLexer<reflex::Matcher> AbstractBaseLexer;
  Scanner(
      const reflex::Input& input = reflex::Input(),
      std::ostream&        os    = std::cout)
    :
      AbstractBaseLexer(input, os)
  {
  }
  static const int INITIAL = 0;
  virtual kazm::Token scan(void);
  kazm::Token scan(const reflex::Input& input)
  {
    in(input);
    return scan();
  }
  kazm::Token scan(const reflex::Input& input, std::ostream *os)
  {
    in(input);
    if (os)
      out(*os);
    return scan();
  }
};

} // namespace kazm

#endif
